/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.7.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import org.openapitools.model.Bill;
import org.openapitools.model.BillCreate;
import org.openapitools.model.Club;
import org.openapitools.model.ClubCreate;
import org.openapitools.model.ClubUpdate;
import org.springframework.format.annotation.DateTimeFormat;
import org.openapitools.model.Employee;
import org.openapitools.model.EmployeeCreate;
import org.openapitools.model.OccupancyReport;
import java.time.OffsetDateTime;
import org.openapitools.model.Product;
import org.openapitools.model.ProductCreate;
import org.openapitools.model.Promotion;
import org.openapitools.model.PromotionCreate;
import org.openapitools.model.RevenueReport;
import org.openapitools.model.Table;
import org.openapitools.model.TableCreate;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2025-10-14T14:32:21.168513498+07:00[Asia/Bangkok]", comments = "Generator version: 7.7.0")
@Validated
@Tag(name = "Bills", description = "the Bills API")
public interface ClubsApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /clubs/{clubId}/bills : List bills for a club
     *
     * @param clubId  (required)
     * @param status  (optional)
     * @param from  (optional)
     * @param to  (optional)
     * @return List of bills (status code 200)
     */
    @Operation(
        operationId = "clubsClubIdBillsGet",
        summary = "List bills for a club",
        tags = { "Bills" },
        responses = {
            @ApiResponse(responseCode = "200", description = "List of bills", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = Bill.class)))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/clubs/{clubId}/bills",
        produces = { "application/json" }
    )
    
    default ResponseEntity<List<Bill>> clubsClubIdBillsGet(
        @Parameter(name = "clubId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("clubId") Integer clubId,
        @Parameter(name = "status", description = "", in = ParameterIn.QUERY) @Valid @RequestParam(value = "status", required = false) String status,
        @Parameter(name = "from", description = "", in = ParameterIn.QUERY) @Valid @RequestParam(value = "from", required = false) @DateTimeFormat(iso = DateTimeFormat.ISO.DATE_TIME) OffsetDateTime from,
        @Parameter(name = "to", description = "", in = ParameterIn.QUERY) @Valid @RequestParam(value = "to", required = false) @DateTimeFormat(iso = DateTimeFormat.ISO.DATE_TIME) OffsetDateTime to
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ { \"bill_id\" : 0, \"total_table_cost\" : 2.3021358869347655, \"discount_amount\" : 9.301444243932576, \"total_product_cost\" : 7.061401241503109, \"end_time\" : \"2000-01-23T04:56:07.000+00:00\", \"table_id\" : 1, \"total_hours\" : 5.637376656633329, \"bill_status\" : \"Paid\", \"start_time\" : \"2000-01-23T04:56:07.000+00:00\", \"club_id\" : 6, \"employee_id\" : 5, \"final_amount\" : 3.616076749251911, \"created_date\" : \"2000-01-23T04:56:07.000+00:00\", \"payment_method\" : \"payment_method\" }, { \"bill_id\" : 0, \"total_table_cost\" : 2.3021358869347655, \"discount_amount\" : 9.301444243932576, \"total_product_cost\" : 7.061401241503109, \"end_time\" : \"2000-01-23T04:56:07.000+00:00\", \"table_id\" : 1, \"total_hours\" : 5.637376656633329, \"bill_status\" : \"Paid\", \"start_time\" : \"2000-01-23T04:56:07.000+00:00\", \"club_id\" : 6, \"employee_id\" : 5, \"final_amount\" : 3.616076749251911, \"created_date\" : \"2000-01-23T04:56:07.000+00:00\", \"payment_method\" : \"payment_method\" } ]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /clubs/{clubId}/bills : Create bill
     *
     * @param clubId  (required)
     * @param billCreate  (required)
     * @return Bill created (status code 201)
     */
    @Operation(
        operationId = "clubsClubIdBillsPost",
        summary = "Create bill",
        tags = { "Bills" },
        responses = {
            @ApiResponse(responseCode = "201", description = "Bill created", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Bill.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/clubs/{clubId}/bills",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<Bill> clubsClubIdBillsPost(
        @Parameter(name = "clubId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("clubId") Integer clubId,
        @Parameter(name = "BillCreate", description = "", required = true) @Valid @RequestBody BillCreate billCreate
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"bill_id\" : 0, \"total_table_cost\" : 2.3021358869347655, \"discount_amount\" : 9.301444243932576, \"total_product_cost\" : 7.061401241503109, \"end_time\" : \"2000-01-23T04:56:07.000+00:00\", \"table_id\" : 1, \"total_hours\" : 5.637376656633329, \"bill_status\" : \"Paid\", \"start_time\" : \"2000-01-23T04:56:07.000+00:00\", \"club_id\" : 6, \"employee_id\" : 5, \"final_amount\" : 3.616076749251911, \"created_date\" : \"2000-01-23T04:56:07.000+00:00\", \"payment_method\" : \"payment_method\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /clubs/{clubId}/employees : List all employees in a club
     *
     * @param clubId  (required)
     * @return List of employees (status code 200)
     */
    @Operation(
        operationId = "clubsClubIdEmployeesGet",
        summary = "List all employees in a club",
        tags = { "Employees" },
        responses = {
            @ApiResponse(responseCode = "200", description = "List of employees", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = Employee.class)))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/clubs/{clubId}/employees",
        produces = { "application/json" }
    )
    
    default ResponseEntity<List<Employee>> clubsClubIdEmployeesGet(
        @Parameter(name = "clubId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("clubId") Integer clubId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ { \"employee_type\" : \"employee_type\", \"address\" : \"address\", \"is_active\" : true, \"hourly_rate\" : 5.962133916683182, \"employee_id\" : 0, \"club_id\" : 6, \"employee_name\" : \"employee_name\", \"phone_number\" : \"phone_number\", \"salary\" : 1.4658129805029452, \"date_hired\" : \"2000-01-23T04:56:07.000+00:00\", \"email\" : \"email\" }, { \"employee_type\" : \"employee_type\", \"address\" : \"address\", \"is_active\" : true, \"hourly_rate\" : 5.962133916683182, \"employee_id\" : 0, \"club_id\" : 6, \"employee_name\" : \"employee_name\", \"phone_number\" : \"phone_number\", \"salary\" : 1.4658129805029452, \"date_hired\" : \"2000-01-23T04:56:07.000+00:00\", \"email\" : \"email\" } ]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /clubs/{clubId}/employees : Create employee
     *
     * @param clubId  (required)
     * @param employeeCreate  (required)
     * @return Employee created (status code 201)
     */
    @Operation(
        operationId = "clubsClubIdEmployeesPost",
        summary = "Create employee",
        tags = { "Employees" },
        responses = {
            @ApiResponse(responseCode = "201", description = "Employee created", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Employee.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/clubs/{clubId}/employees",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<Employee> clubsClubIdEmployeesPost(
        @Parameter(name = "clubId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("clubId") Integer clubId,
        @Parameter(name = "EmployeeCreate", description = "", required = true) @Valid @RequestBody EmployeeCreate employeeCreate
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"employee_type\" : \"employee_type\", \"address\" : \"address\", \"is_active\" : true, \"hourly_rate\" : 5.962133916683182, \"employee_id\" : 0, \"club_id\" : 6, \"employee_name\" : \"employee_name\", \"phone_number\" : \"phone_number\", \"salary\" : 1.4658129805029452, \"date_hired\" : \"2000-01-23T04:56:07.000+00:00\", \"email\" : \"email\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /clubs/{clubId} : Get club details
     *
     * @param clubId  (required)
     * @return Club details (status code 200)
     *         or Club not found (status code 404)
     */
    @Operation(
        operationId = "clubsClubIdGet",
        summary = "Get club details",
        tags = { "Clubs" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Club details", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Club.class))
            }),
            @ApiResponse(responseCode = "404", description = "Club not found")
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/clubs/{clubId}",
        produces = { "application/json" }
    )
    
    default ResponseEntity<Club> clubsClubIdGet(
        @Parameter(name = "clubId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("clubId") Integer clubId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"address\" : \"address\", \"club_id\" : 0, \"phone_number\" : \"phone_number\", \"customer_id\" : 6, \"club_name\" : \"club_name\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PATCH /clubs/{clubId} : Update club information
     *
     * @param clubId  (required)
     * @param clubUpdate  (required)
     * @return Club updated (status code 200)
     */
    @Operation(
        operationId = "clubsClubIdPatch",
        summary = "Update club information",
        tags = { "Clubs" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Club updated", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Club.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.PATCH,
        value = "/clubs/{clubId}",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<Club> clubsClubIdPatch(
        @Parameter(name = "clubId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("clubId") Integer clubId,
        @Parameter(name = "ClubUpdate", description = "", required = true) @Valid @RequestBody ClubUpdate clubUpdate
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"address\" : \"address\", \"club_id\" : 0, \"phone_number\" : \"phone_number\", \"customer_id\" : 6, \"club_name\" : \"club_name\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /clubs/{clubId}/products : List all products in a club
     *
     * @param clubId  (required)
     * @return List of products (status code 200)
     */
    @Operation(
        operationId = "clubsClubIdProductsGet",
        summary = "List all products in a club",
        tags = { "Products" },
        responses = {
            @ApiResponse(responseCode = "200", description = "List of products", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = Product.class)))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/clubs/{clubId}/products",
        produces = { "application/json" }
    )
    
    default ResponseEntity<List<Product>> clubsClubIdProductsGet(
        @Parameter(name = "clubId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("clubId") Integer clubId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ { \"is_active\" : true, \"price\" : 1.4658129805029452, \"product_id\" : 0, \"club_id\" : 6, \"created_date\" : \"2000-01-23T04:56:07.000+00:00\", \"category\" : \"category\", \"product_name\" : \"product_name\", \"cost_price\" : 5.962133916683182 }, { \"is_active\" : true, \"price\" : 1.4658129805029452, \"product_id\" : 0, \"club_id\" : 6, \"created_date\" : \"2000-01-23T04:56:07.000+00:00\", \"category\" : \"category\", \"product_name\" : \"product_name\", \"cost_price\" : 5.962133916683182 } ]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /clubs/{clubId}/products : Create product
     *
     * @param clubId  (required)
     * @param productCreate  (required)
     * @return Product created (status code 201)
     */
    @Operation(
        operationId = "clubsClubIdProductsPost",
        summary = "Create product",
        tags = { "Products" },
        responses = {
            @ApiResponse(responseCode = "201", description = "Product created", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Product.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/clubs/{clubId}/products",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<Product> clubsClubIdProductsPost(
        @Parameter(name = "clubId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("clubId") Integer clubId,
        @Parameter(name = "ProductCreate", description = "", required = true) @Valid @RequestBody ProductCreate productCreate
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"is_active\" : true, \"price\" : 1.4658129805029452, \"product_id\" : 0, \"club_id\" : 6, \"created_date\" : \"2000-01-23T04:56:07.000+00:00\", \"category\" : \"category\", \"product_name\" : \"product_name\", \"cost_price\" : 5.962133916683182 }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /clubs/{clubId}/promotions : List all promotions in a club
     *
     * @param clubId  (required)
     * @return List of promotions (status code 200)
     */
    @Operation(
        operationId = "clubsClubIdPromotionsGet",
        summary = "List all promotions in a club",
        tags = { "Promotions" },
        responses = {
            @ApiResponse(responseCode = "200", description = "List of promotions", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = Promotion.class)))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/clubs/{clubId}/promotions",
        produces = { "application/json" }
    )
    
    default ResponseEntity<List<Promotion>> clubsClubIdPromotionsGet(
        @Parameter(name = "clubId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("clubId") Integer clubId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ { \"end_date\" : \"2000-01-23T04:56:07.000+00:00\", \"promotion_name\" : \"promotion_name\", \"is_active\" : true, \"promotion_code\" : \"promotion_code\", \"club_id\" : 6, \"discount_value\" : 1.4658129805029452, \"promotion_id\" : 0, \"discount_type\" : \"discount_type\", \"start_date\" : \"2000-01-23T04:56:07.000+00:00\" }, { \"end_date\" : \"2000-01-23T04:56:07.000+00:00\", \"promotion_name\" : \"promotion_name\", \"is_active\" : true, \"promotion_code\" : \"promotion_code\", \"club_id\" : 6, \"discount_value\" : 1.4658129805029452, \"promotion_id\" : 0, \"discount_type\" : \"discount_type\", \"start_date\" : \"2000-01-23T04:56:07.000+00:00\" } ]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /clubs/{clubId}/promotions : Create promotion
     *
     * @param clubId  (required)
     * @param promotionCreate  (required)
     * @return Promotion created (status code 201)
     */
    @Operation(
        operationId = "clubsClubIdPromotionsPost",
        summary = "Create promotion",
        tags = { "Promotions" },
        responses = {
            @ApiResponse(responseCode = "201", description = "Promotion created", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Promotion.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/clubs/{clubId}/promotions",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<Promotion> clubsClubIdPromotionsPost(
        @Parameter(name = "clubId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("clubId") Integer clubId,
        @Parameter(name = "PromotionCreate", description = "", required = true) @Valid @RequestBody PromotionCreate promotionCreate
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"end_date\" : \"2000-01-23T04:56:07.000+00:00\", \"promotion_name\" : \"promotion_name\", \"is_active\" : true, \"promotion_code\" : \"promotion_code\", \"club_id\" : 6, \"discount_value\" : 1.4658129805029452, \"promotion_id\" : 0, \"discount_type\" : \"discount_type\", \"start_date\" : \"2000-01-23T04:56:07.000+00:00\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /clubs/{clubId}/reports/revenue : Get revenue report for a club
     *
     * @param clubId  (required)
     * @param from  (optional)
     * @param to  (optional)
     * @return Revenue report (status code 200)
     */
    @Operation(
        operationId = "clubsClubIdReportsRevenueGet",
        summary = "Get revenue report for a club",
        tags = { "Reports" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Revenue report", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = RevenueReport.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/clubs/{clubId}/reports/revenue",
        produces = { "application/json" }
    )
    
    default ResponseEntity<RevenueReport> clubsClubIdReportsRevenueGet(
        @Parameter(name = "clubId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("clubId") Integer clubId,
        @Parameter(name = "from", description = "", in = ParameterIn.QUERY) @Valid @RequestParam(value = "from", required = false) @DateTimeFormat(iso = DateTimeFormat.ISO.DATE_TIME) OffsetDateTime from,
        @Parameter(name = "to", description = "", in = ParameterIn.QUERY) @Valid @RequestParam(value = "to", required = false) @DateTimeFormat(iso = DateTimeFormat.ISO.DATE_TIME) OffsetDateTime to
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"total_discount\" : 5.962133916683182, \"total_revenue\" : 0.8008281904610115, \"period_from\" : \"2000-01-23T04:56:07.000+00:00\", \"period_to\" : \"2000-01-23T04:56:07.000+00:00\", \"table_revenue\" : 6.027456183070403, \"product_revenue\" : 1.4658129805029452 }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /clubs/{clubId}/reports/table-occupancy : Get table occupancy report
     *
     * @param clubId  (required)
     * @param from  (optional)
     * @param to  (optional)
     * @return Occupancy report (status code 200)
     */
    @Operation(
        operationId = "clubsClubIdReportsTableOccupancyGet",
        summary = "Get table occupancy report",
        tags = { "Reports" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Occupancy report", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = OccupancyReport.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/clubs/{clubId}/reports/table-occupancy",
        produces = { "application/json" }
    )
    
    default ResponseEntity<OccupancyReport> clubsClubIdReportsTableOccupancyGet(
        @Parameter(name = "clubId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("clubId") Integer clubId,
        @Parameter(name = "from", description = "", in = ParameterIn.QUERY) @Valid @RequestParam(value = "from", required = false) @DateTimeFormat(iso = DateTimeFormat.ISO.DATE_TIME) OffsetDateTime from,
        @Parameter(name = "to", description = "", in = ParameterIn.QUERY) @Valid @RequestParam(value = "to", required = false) @DateTimeFormat(iso = DateTimeFormat.ISO.DATE_TIME) OffsetDateTime to
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"occupancy_rate\" : 1.4658129805029452, \"by_table_type\" : [ { \"occupancy_rate\" : 5.962133916683182, \"table_type\" : \"table_type\" }, { \"occupancy_rate\" : 5.962133916683182, \"table_type\" : \"table_type\" } ], \"total_hours_available\" : 0.8008281904610115, \"total_hours_used\" : 6.027456183070403 }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /clubs/{clubId}/tables : List all tables in a club
     *
     * @param clubId  (required)
     * @return List of tables (status code 200)
     */
    @Operation(
        operationId = "clubsClubIdTablesGet",
        summary = "List all tables in a club",
        tags = { "Tables" },
        responses = {
            @ApiResponse(responseCode = "200", description = "List of tables", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = Table.class)))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/clubs/{clubId}/tables",
        produces = { "application/json" }
    )
    
    default ResponseEntity<List<Table>> clubsClubIdTablesGet(
        @Parameter(name = "clubId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("clubId") Integer clubId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ { \"table_status\" : \"table_status\", \"hourly_rate\" : 1.4658129805029452, \"club_id\" : 6, \"location\" : \"location\", \"table_id\" : 0, \"table_name\" : \"table_name\", \"table_type\" : \"table_type\" }, { \"table_status\" : \"table_status\", \"hourly_rate\" : 1.4658129805029452, \"club_id\" : 6, \"location\" : \"location\", \"table_id\" : 0, \"table_name\" : \"table_name\", \"table_type\" : \"table_type\" } ]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /clubs/{clubId}/tables : Create a billiard table
     *
     * @param clubId  (required)
     * @param tableCreate  (required)
     * @return Table created (status code 201)
     */
    @Operation(
        operationId = "clubsClubIdTablesPost",
        summary = "Create a billiard table",
        tags = { "Tables" },
        responses = {
            @ApiResponse(responseCode = "201", description = "Table created", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Table.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/clubs/{clubId}/tables",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<Table> clubsClubIdTablesPost(
        @Parameter(name = "clubId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("clubId") Integer clubId,
        @Parameter(name = "TableCreate", description = "", required = true) @Valid @RequestBody TableCreate tableCreate
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"table_status\" : \"table_status\", \"hourly_rate\" : 1.4658129805029452, \"club_id\" : 6, \"location\" : \"location\", \"table_id\" : 0, \"table_name\" : \"table_name\", \"table_type\" : \"table_type\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /clubs : List all clubs for current customer
     *
     * @return List of clubs (status code 200)
     */
    @Operation(
        operationId = "clubsGet",
        summary = "List all clubs for current customer",
        tags = { "Clubs" },
        responses = {
            @ApiResponse(responseCode = "200", description = "List of clubs", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = Club.class)))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/clubs",
        produces = { "application/json" }
    )
    
    default ResponseEntity<List<Club>> clubsGet(
        
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ { \"address\" : \"address\", \"club_id\" : 0, \"phone_number\" : \"phone_number\", \"customer_id\" : 6, \"club_name\" : \"club_name\" }, { \"address\" : \"address\", \"club_id\" : 0, \"phone_number\" : \"phone_number\", \"customer_id\" : 6, \"club_name\" : \"club_name\" } ]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /clubs : Create a new billiard club
     *
     * @param clubCreate  (required)
     * @return Club created successfully (status code 201)
     *         or Invalid input (status code 400)
     */
    @Operation(
        operationId = "clubsPost",
        summary = "Create a new billiard club",
        tags = { "Clubs" },
        responses = {
            @ApiResponse(responseCode = "201", description = "Club created successfully", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Club.class))
            }),
            @ApiResponse(responseCode = "400", description = "Invalid input")
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/clubs",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<Club> clubsPost(
        @Parameter(name = "ClubCreate", description = "", required = true) @Valid @RequestBody ClubCreate clubCreate
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"address\" : \"address\", \"club_id\" : 0, \"phone_number\" : \"phone_number\", \"customer_id\" : 6, \"club_name\" : \"club_name\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
