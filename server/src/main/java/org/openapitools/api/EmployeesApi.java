/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.7.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import org.springframework.format.annotation.DateTimeFormat;
import org.openapitools.model.Employee;
import org.openapitools.model.EmployeeUpdate;
import java.time.LocalDate;
import org.openapitools.model.Shift;
import org.openapitools.model.ShiftCreate;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2025-10-14T14:32:21.168513498+07:00[Asia/Bangkok]", comments = "Generator version: 7.7.0")
@Validated
@Tag(name = "Employees", description = "the Employees API")
public interface EmployeesApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /employees/{employeeId} : Get employee details
     *
     * @param employeeId  (required)
     * @return Employee details (status code 200)
     */
    @Operation(
        operationId = "employeesEmployeeIdGet",
        summary = "Get employee details",
        tags = { "Employees" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Employee details", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Employee.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/employees/{employeeId}",
        produces = { "application/json" }
    )
    
    default ResponseEntity<Employee> employeesEmployeeIdGet(
        @Parameter(name = "employeeId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("employeeId") Integer employeeId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"employee_type\" : \"employee_type\", \"address\" : \"address\", \"is_active\" : true, \"hourly_rate\" : 5.962133916683182, \"employee_id\" : 0, \"club_id\" : 6, \"employee_name\" : \"employee_name\", \"phone_number\" : \"phone_number\", \"salary\" : 1.4658129805029452, \"date_hired\" : \"2000-01-23T04:56:07.000+00:00\", \"email\" : \"email\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PATCH /employees/{employeeId} : Update employee information
     *
     * @param employeeId  (required)
     * @param employeeUpdate  (required)
     * @return Employee updated (status code 200)
     */
    @Operation(
        operationId = "employeesEmployeeIdPatch",
        summary = "Update employee information",
        tags = { "Employees" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Employee updated", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Employee.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.PATCH,
        value = "/employees/{employeeId}",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<Employee> employeesEmployeeIdPatch(
        @Parameter(name = "employeeId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("employeeId") Integer employeeId,
        @Parameter(name = "EmployeeUpdate", description = "", required = true) @Valid @RequestBody EmployeeUpdate employeeUpdate
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"employee_type\" : \"employee_type\", \"address\" : \"address\", \"is_active\" : true, \"hourly_rate\" : 5.962133916683182, \"employee_id\" : 0, \"club_id\" : 6, \"employee_name\" : \"employee_name\", \"phone_number\" : \"phone_number\", \"salary\" : 1.4658129805029452, \"date_hired\" : \"2000-01-23T04:56:07.000+00:00\", \"email\" : \"email\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /employees/{employeeId}/shifts : List shifts for an employee
     *
     * @param employeeId  (required)
     * @param from  (optional)
     * @param to  (optional)
     * @return List of shifts (status code 200)
     */
    @Operation(
        operationId = "employeesEmployeeIdShiftsGet",
        summary = "List shifts for an employee",
        tags = { "Shifts" },
        responses = {
            @ApiResponse(responseCode = "200", description = "List of shifts", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = Shift.class)))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/employees/{employeeId}/shifts",
        produces = { "application/json" }
    )
    
    default ResponseEntity<List<Shift>> employeesEmployeeIdShiftsGet(
        @Parameter(name = "employeeId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("employeeId") Integer employeeId,
        @Parameter(name = "from", description = "", in = ParameterIn.QUERY) @Valid @RequestParam(value = "from", required = false) @DateTimeFormat(iso = DateTimeFormat.ISO.DATE) LocalDate from,
        @Parameter(name = "to", description = "", in = ParameterIn.QUERY) @Valid @RequestParam(value = "to", required = false) @DateTimeFormat(iso = DateTimeFormat.ISO.DATE) LocalDate to
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ { \"start_time\" : \"start_time\", \"shift_type\" : \"shift_type\", \"shift_date\" : \"2000-01-23\", \"shift_id\" : 0, \"employee_id\" : 6, \"end_time\" : \"end_time\", \"hours_worked\" : 1.4658129805029452, \"status\" : \"status\" }, { \"start_time\" : \"start_time\", \"shift_type\" : \"shift_type\", \"shift_date\" : \"2000-01-23\", \"shift_id\" : 0, \"employee_id\" : 6, \"end_time\" : \"end_time\", \"hours_worked\" : 1.4658129805029452, \"status\" : \"status\" } ]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /employees/{employeeId}/shifts : Create employee shift
     *
     * @param employeeId  (required)
     * @param shiftCreate  (required)
     * @return Shift created (status code 201)
     */
    @Operation(
        operationId = "employeesEmployeeIdShiftsPost",
        summary = "Create employee shift",
        tags = { "Shifts" },
        responses = {
            @ApiResponse(responseCode = "201", description = "Shift created", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Shift.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/employees/{employeeId}/shifts",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<Shift> employeesEmployeeIdShiftsPost(
        @Parameter(name = "employeeId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("employeeId") Integer employeeId,
        @Parameter(name = "ShiftCreate", description = "", required = true) @Valid @RequestBody ShiftCreate shiftCreate
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"start_time\" : \"start_time\", \"shift_type\" : \"shift_type\", \"shift_date\" : \"2000-01-23\", \"shift_id\" : 0, \"employee_id\" : 6, \"end_time\" : \"end_time\", \"hours_worked\" : 1.4658129805029452, \"status\" : \"status\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
