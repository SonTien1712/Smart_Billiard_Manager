/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.7.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import org.openapitools.model.Shift;
import org.openapitools.model.ShiftUpdate;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2025-10-14T14:32:21.168513498+07:00[Asia/Bangkok]", comments = "Generator version: 7.7.0")
@Validated
@Tag(name = "Shifts", description = "the Shifts API")
public interface ShiftsApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * PATCH /shifts/{shiftId} : Update shift
     *
     * @param shiftId  (required)
     * @param shiftUpdate  (required)
     * @return Shift updated (status code 200)
     */
    @Operation(
        operationId = "shiftsShiftIdPatch",
        summary = "Update shift",
        tags = { "Shifts" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Shift updated", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Shift.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.PATCH,
        value = "/shifts/{shiftId}",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<Shift> shiftsShiftIdPatch(
        @Parameter(name = "shiftId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("shiftId") Integer shiftId,
        @Parameter(name = "ShiftUpdate", description = "", required = true) @Valid @RequestBody ShiftUpdate shiftUpdate
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"start_time\" : \"start_time\", \"shift_type\" : \"shift_type\", \"shift_date\" : \"2000-01-23\", \"shift_id\" : 0, \"employee_id\" : 6, \"end_time\" : \"end_time\", \"hours_worked\" : 1.4658129805029452, \"status\" : \"status\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
