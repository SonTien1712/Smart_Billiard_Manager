/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.7.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import org.openapitools.model.Bill;
import org.openapitools.model.BillDetail;
import org.openapitools.model.BillDetailCreate;
import org.openapitools.model.PaymentProcess;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2025-10-14T14:32:21.168513498+07:00[Asia/Bangkok]", comments = "Generator version: 7.7.0")
@Validated
@Tag(name = "BillDetails", description = "the BillDetails API")
public interface BillsApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /bills/{billId}/details : Get bill details
     *
     * @param billId  (required)
     * @return List of bill details (status code 200)
     */
    @Operation(
        operationId = "billsBillIdDetailsGet",
        summary = "Get bill details",
        tags = { "BillDetails" },
        responses = {
            @ApiResponse(responseCode = "200", description = "List of bill details", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = BillDetail.class)))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/bills/{billId}/details",
        produces = { "application/json" }
    )
    
    default ResponseEntity<List<BillDetail>> billsBillIdDetailsGet(
        @Parameter(name = "billId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("billId") Integer billId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ { \"bill_id\" : 6, \"quantity\" : 5, \"product_id\" : 1, \"sub_total\" : 2.3021358869347655, \"bill_detail_id\" : 0, \"unit_price\" : 5.637376656633329 }, { \"bill_id\" : 6, \"quantity\" : 5, \"product_id\" : 1, \"sub_total\" : 2.3021358869347655, \"bill_detail_id\" : 0, \"unit_price\" : 5.637376656633329 } ]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /bills/{billId}/details : Add product to bill
     *
     * @param billId  (required)
     * @param billDetailCreate  (required)
     * @return Item added to bill (status code 201)
     */
    @Operation(
        operationId = "billsBillIdDetailsPost",
        summary = "Add product to bill",
        tags = { "BillDetails" },
        responses = {
            @ApiResponse(responseCode = "201", description = "Item added to bill", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = BillDetail.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/bills/{billId}/details",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<BillDetail> billsBillIdDetailsPost(
        @Parameter(name = "billId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("billId") Integer billId,
        @Parameter(name = "BillDetailCreate", description = "", required = true) @Valid @RequestBody BillDetailCreate billDetailCreate
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"bill_id\" : 6, \"quantity\" : 5, \"product_id\" : 1, \"sub_total\" : 2.3021358869347655, \"bill_detail_id\" : 0, \"unit_price\" : 5.637376656633329 }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /bills/{billId} : Get bill details
     *
     * @param billId  (required)
     * @return Bill details (status code 200)
     */
    @Operation(
        operationId = "billsBillIdGet",
        summary = "Get bill details",
        tags = { "Bills" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Bill details", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Bill.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/bills/{billId}",
        produces = { "application/json" }
    )
    
    default ResponseEntity<Bill> billsBillIdGet(
        @Parameter(name = "billId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("billId") Integer billId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"bill_id\" : 0, \"total_table_cost\" : 2.3021358869347655, \"discount_amount\" : 9.301444243932576, \"total_product_cost\" : 7.061401241503109, \"end_time\" : \"2000-01-23T04:56:07.000+00:00\", \"table_id\" : 1, \"total_hours\" : 5.637376656633329, \"bill_status\" : \"Paid\", \"start_time\" : \"2000-01-23T04:56:07.000+00:00\", \"club_id\" : 6, \"employee_id\" : 5, \"final_amount\" : 3.616076749251911, \"created_date\" : \"2000-01-23T04:56:07.000+00:00\", \"payment_method\" : \"payment_method\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /bills/{billId}/pay : Mark bill as paid
     *
     * @param billId  (required)
     * @param paymentProcess  (required)
     * @return Bill paid (status code 200)
     */
    @Operation(
        operationId = "billsBillIdPayPost",
        summary = "Mark bill as paid",
        tags = { "Bills" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Bill paid", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Bill.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/bills/{billId}/pay",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<Bill> billsBillIdPayPost(
        @Parameter(name = "billId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("billId") Integer billId,
        @Parameter(name = "PaymentProcess", description = "", required = true) @Valid @RequestBody PaymentProcess paymentProcess
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"bill_id\" : 0, \"total_table_cost\" : 2.3021358869347655, \"discount_amount\" : 9.301444243932576, \"total_product_cost\" : 7.061401241503109, \"end_time\" : \"2000-01-23T04:56:07.000+00:00\", \"table_id\" : 1, \"total_hours\" : 5.637376656633329, \"bill_status\" : \"Paid\", \"start_time\" : \"2000-01-23T04:56:07.000+00:00\", \"club_id\" : 6, \"employee_id\" : 5, \"final_amount\" : 3.616076749251911, \"created_date\" : \"2000-01-23T04:56:07.000+00:00\", \"payment_method\" : \"payment_method\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
